//* Calculadora

//! ---

// function sum() {
//   const value1 = document.getElementById('value1').value;
//   const value2 = document.getElementById('value2').value;
//   const result = Number(value1) + Number(value2);
//   document.getElementById('result').innerHTML = `Resultado: ${result}`;
//   document.getElementById('value1').value = '';
//   document.getElementById('value2').value = '';
// }
// window.onload = () => {
//   const button = document.getElementById('button');
//   button.addEventListener('click', sum);
// }

//! ---

//?  A aplicaÃ§Ã£o pede Ã  pessoa usuÃ¡ria que informe dois nÃºmeros para realizar uma soma. Esses nÃºmeros sÃ£o inseridos atravÃ©s dos inputs;

//? Ao clicar o botÃ£o, a funÃ§Ã£o sum Ã© chamada, capturando o valor escrito nos inputs e realizando a operaÃ§Ã£o. Antes, Ã© necessÃ¡ria a conversÃ£o do valor usando o Number(), pois ele chega Ã  funÃ§Ã£o em forma de string. HÃ¡ tambÃ©m outras formas de se converter uma string em um nÃºmero, como o parseInt() e o parseFloat();

//? Ao final, a funÃ§Ã£o sum imprime o valor em um parÃ¡grafo e limpa os inputs para que a pessoa usuÃ¡ria possa inserir novos valores.

//* ðŸš€ - Crie erros personalizados.

// Tente executar a aplicaÃ§Ã£o com um dos valores em branco. Notou que o retorno nÃ£o Ã© muito descritivo?

// Utilize o throw new Error e o bloco try/catch.

// Evite funÃ§Ãµes que tenham muitas responsabilidades distintas.

// Caso a pessoa usuÃ¡ria nÃ£o preencha nenhum input, ou preencha apenas um input, lance um erro.

// Caso os valores inseridos nos inputs pela pessoa usuÃ¡ria nÃ£o sejam nÃºmeros, lance um erro. VocÃª pode fazer essa verificaÃ§Ã£o utilizando a funÃ§Ã£o isNan().

// Adicione o texto dos erros no parÃ¡grafo com id result, para que a pessoa usuÃ¡ria saiba o que aconteceu. Lembre-se de usar erros descritivos!

// Utilize o finally para apagar os valores dos inputs ao final do bloco try/catch.

//* FunÃ§Ã£o que recebe 02 valores (parametros)

const verifyIsNumber = (value1, value2) => {
  //\\ Verifica se foi inserido algum valor
  if (!value1 || !value2) {
    throw new Error('Preencha os campos para realizar a soma');
    // Erro casso nÃ£o seja preenchido 
  }

  if (isNaN(value1) || isNaN(value2)) { 
    //\\ Verifica se sÃ£o nÃºmeros
    throw new Error('Informe dois nÃºmeros para realizar a soma'); 
    // Erro casso nÃ£o seja numeros
  }
}
//* Try..catch

const sum = () => {
  try { 
    const value1 = document.getElementById('value1').value; // Valor do input 1
    const value2 = document.getElementById('value2').value; // Valor do input 2
    
    verifyIsNumber(value1, value2); 
    //\\ Executa verifyIsNumber

    const result = Number(value1) + Number(value2); 
    //\\ Soma os valores

    document.getElementById('result').innerHTML = `Resultado: ${result}`; 
    //\\ Exibe mensagem do resultado na pagina

  } catch (error) {
    document.getElementById('result').innerHTML = `Erro: ${error.message}`;
    //\\ Exibe mensagem de erro do resultado na pagina

  } finally {
    document.getElementById('value1').value = ''; // Reseta valor1
    document.getElementById('value2').value = ''; // Reseta valor2
  }
}

window.onload = () => {
  const button = document.getElementById('button');
  button.addEventListener('click', sum);
}